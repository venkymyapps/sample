package org.sample.com.model;
// Generated Jun 16, 2018 11:48:50 AM by Hibernate Tools 5.2.1.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.ColumnResult;
import javax.persistence.ConstructorResult;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SqlResultSetMapping;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

/**
 * Company generated by hbm2java
 */

@SqlResultSetMapping(name = "company_details", classes = { @ConstructorResult(targetClass = Company.class, columns = {
		@ColumnResult(name = "id"), @ColumnResult(name = "name"), @ColumnResult(name = "address"),
		@ColumnResult(name = "cityName"), @ColumnResult(name = "state") }) })

@Entity
@Table(name = "company", catalog = "sample", uniqueConstraints = @UniqueConstraint(columnNames = "name"))
public class Company implements java.io.Serializable {

	/**
	* 
	*/
	private static final long serialVersionUID = 1L;
	private Integer id;
	private City city;
	private String name;
	private String address;
	private String state;
	private List<Employee> employees = new ArrayList<Employee>(0);
    private String cityName;
	
	public Company() {
	}

	public Company(String state, String name, String address, List<Employee> employees) {
		this.setState(state);
		this.name = name;
		this.address = address;
		this.employees = employees;
	}

	public Company(int id, String name, String address, String cityName, String state) {
		this.id = id;
		this.name = name;
		this.address = address;
		this.cityName = cityName;
		this.state = state;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@JsonProperty(access = Access.WRITE_ONLY)
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cityName", nullable = false)
	public City getCity() {
		return this.city;
	}

	public void setCity(City city) {
		this.city = city;
	}

	@Column(name = "name", unique = true, nullable = false, length = 125)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "address", nullable = false, length = 250)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@JsonProperty(access = Access.WRITE_ONLY)
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "company")
	public List<Employee> getEmployees() {
		return this.employees;
	}

	public void setEmployees(List<Employee> employees) {
		this.employees = employees;
	}

	@Transient
	public String getCityName() {
		return cityName;
	}

	public void setCityName(String cityName) {
		this.cityName = cityName;
	}

	public String getState() {
		return state;
	}

	public void setState(String state) {
		this.state = state;
	}
}
